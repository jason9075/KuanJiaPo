name: CI
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      # 如果你的專案需要特定的 Python 版本
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      # 以下若不使用 Python 做測試可省略；若有多個需求檔可視情況安裝
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
      # 假設你會使用 unittest 或 pytest 作測試，可視你的實際測試架構而調整
      - name: Run tests
        run: |
          # 使用 unittest 執行 tests 目錄下的測試
          python -m unittest discover -s tests
      # Login Docker registry（若需要 push 至私有/公有 registry，可以在這裡做 docker login）
      # - name: Log in to registry
      #   run: |
      #     echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login -u ${{ secrets.REGISTRY_USERNAME }} --password-stdin
      - name: Build images via Docker
        run: |
          docker build -t my-detect-image:latest -f Dockerfile .
          docker build -t my-web-image:latest -f Dockerfile .
      - name: Run tests inside Docker
        run: |
          docker run --rm -v ${{ github.workspace }}:/app my-detect-image:latest python -m unittest discover -s tests

      - name: Build and run services with docker-compose
        run: |
          cat <<'EOF' > .env
          MYSQL_ROOT_PASSWORD=root
          MYSQL_DATABASE=kuanjiapo
          MYSQL_USER=kuanjiapo
          MYSQL_PASSWORD=kuanjiapo
          INTERVAL_SEC=1
          PERSON_INTERVAL_MIN=1
          FACE_CONF_THR=0.6
          EOF
          docker-compose build
          docker-compose up -d
          sleep 10
          docker-compose ps
          if docker-compose ps | grep -E '(Exit|exited)'; then
            echo "Some containers have exited unexpectedly" >&2
            exit 1
          fi

      - name: Tear down services
        if: always()
        run: docker-compose down -v

